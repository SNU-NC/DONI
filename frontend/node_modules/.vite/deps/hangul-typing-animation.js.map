{
  "version": 3,
  "sources": ["../../hangul-typing-animation/esm/typeStream.js"],
  "sourcesContent": ["var CHOSUNG_LIST = [\n    'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\n]; // 19\nvar JUNGSUNG_LIST = [\n    'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'\n]; // 21\nvar JONGSUNG_LIST = [\n    '', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\n]; // 28\nvar GYEOP_JUNGSUNG_LIST = {\n    'ㅘ': 'ㅗㅏ',\n    'ㅙ': 'ㅗㅐ',\n    'ㅚ': 'ㅗㅣ',\n    'ㅝ': 'ㅜㅓ',\n    'ㅞ': 'ㅜㅔ',\n    'ㅟ': 'ㅜㅣ',\n    'ㅢ': 'ㅡㅣ',\n};\nvar GYEOP_JONGSUNG_LIST = {\n    'ㄳ': 'ㄱㅅ',\n    'ㄵ': 'ㄴㅈ',\n    'ㄶ': 'ㄴㅎ',\n    'ㄺ': 'ㄹㄱ',\n    'ㄻ': 'ㄹㅁ',\n    'ㄼ': 'ㄹㅂ',\n    'ㄽ': 'ㄹㅅ',\n    'ㄾ': 'ㄹㅌ',\n    'ㄿ': 'ㄹㅍ',\n    'ㅀ': 'ㄹㅎ',\n    'ㅄ': 'ㅂㅅ'\n};\nvar REVERSE_GYEOP_JUNGSUNG_LIST = {\n    'ㅗㅏ': 'ㅘ',\n    'ㅗㅐ': 'ㅙ',\n    'ㅗㅣ': 'ㅚ',\n    'ㅜㅓ': 'ㅝ',\n    'ㅜㅔ': 'ㅞ',\n    'ㅜㅣ': 'ㅟ',\n    'ㅡㅣ': 'ㅢ',\n};\nvar REVERSE_GYEOP_JONGSUNG_LIST = {\n    'ㄱㅅ': 'ㄳ',\n    'ㄴㅈ': 'ㄵ',\n    'ㄴㅎ': 'ㄶ',\n    'ㄹㄱ': 'ㄺ',\n    'ㄹㅁ': 'ㄻ',\n    'ㄹㅂ': 'ㄼ',\n    'ㄹㅅ': 'ㄽ',\n    'ㄹㅌ': 'ㄾ',\n    'ㄹㅍ': 'ㄿ',\n    'ㄹㅎ': 'ㅀ',\n    'ㅂㅅ': 'ㅄ',\n};\nvar BASE_CODE = 0xAC00; // '가'\nvar END_CODE = 0xD7A3; // '힣'\nvar CHOSUNG_BASE = 588; // 초성이 사용되는 개수 = 21(JUNGSUNG_LIST) * 28(JONGSUNG_LIST) = 588\nvar JUNGSUNG_BASE = 28; // JONGSUNG_LIST.length\n// 유니코드 값 = (초성 인덱스 × 중성 개수 × 종성 개수) + (중성 인덱스 × 종성 개수) + 종성 인덱스 + BASE_CODE\nexport function isNewLine(text) {\n    return /\\n/.test(text);\n}\nexport function isDot(text) {\n    return /\\./.test(text);\n}\nexport function isInJongSung(text) {\n    return JONGSUNG_LIST.includes(text);\n}\nexport function isSpaceCharacter(text) {\n    return text === ' ' || text === '\\s';\n}\nexport function decomposeHangul(text) {\n    var decomposed = [];\n    for (var i = 0; i < text.length; i++) {\n        var charCode = text.charCodeAt(i);\n        if (charCode < BASE_CODE || charCode > END_CODE) {\n            decomposed.push([text[i]]);\n            continue;\n        }\n        var uniValue = charCode - BASE_CODE;\n        var chosungIndex = Math.floor(uniValue / CHOSUNG_BASE);\n        var jungsungIndex = Math.floor((uniValue - (chosungIndex * CHOSUNG_BASE)) / JUNGSUNG_BASE);\n        var jongsungIndex = uniValue % JUNGSUNG_BASE;\n        var chosungString = CHOSUNG_LIST[chosungIndex];\n        var jungsungString = JUNGSUNG_LIST[jungsungIndex];\n        var jongsungString = JONGSUNG_LIST[jongsungIndex];\n        var chosung = chosungString;\n        var jungsung = (GYEOP_JUNGSUNG_LIST[jungsungString] ? GYEOP_JUNGSUNG_LIST[jungsungString] : jungsungString);\n        var jongsung = (GYEOP_JONGSUNG_LIST[jongsungString] ? GYEOP_JONGSUNG_LIST[jongsungString] : jongsungString);\n        decomposed.push([chosung, jungsung, jongsung].filter(function (jaso) { return jaso; }));\n    }\n    return decomposed;\n}\nexport function composeHangul(decomposed) {\n    return decomposed.map(function (jasoArray) {\n        if (jasoArray.length === 1) {\n            var chosung = jasoArray[0];\n            return chosung;\n        }\n        else if (jasoArray.length === 2) {\n            var chosung = jasoArray[0];\n            var jungsung = REVERSE_GYEOP_JUNGSUNG_LIST[jasoArray[1]] ? REVERSE_GYEOP_JUNGSUNG_LIST[jasoArray[1]] : jasoArray[1];\n            var chosungIndex = CHOSUNG_LIST.indexOf(chosung);\n            var jungsungIndex = JUNGSUNG_LIST.indexOf(jungsung);\n            return String.fromCharCode(BASE_CODE + chosungIndex * CHOSUNG_BASE + jungsungIndex * JUNGSUNG_BASE);\n        }\n        else if (jasoArray.length === 3) {\n            var chosung = jasoArray[0];\n            var jungsung = REVERSE_GYEOP_JUNGSUNG_LIST[jasoArray[1]] ? REVERSE_GYEOP_JUNGSUNG_LIST[jasoArray[1]] : jasoArray[1];\n            var jongsung = REVERSE_GYEOP_JONGSUNG_LIST[jasoArray[2]] ? REVERSE_GYEOP_JONGSUNG_LIST[jasoArray[2]] : jasoArray[2];\n            var chosungIndex = CHOSUNG_LIST.indexOf(chosung);\n            var jungsungIndex = JUNGSUNG_LIST.indexOf(jungsung);\n            var jongsungIndex = JONGSUNG_LIST.indexOf(jongsung);\n            return String.fromCharCode(BASE_CODE + chosungIndex * CHOSUNG_BASE + jungsungIndex * JUNGSUNG_BASE + jongsungIndex);\n        }\n        return '';\n    }).join('');\n}\nfunction changeLast(textArr, lastChar) {\n    textArr.pop();\n    textArr.push(lastChar);\n    return textArr;\n}\nexport var delay = function (milliseconds) {\n    return new Promise(function (resolve) { return setTimeout(resolve, milliseconds); });\n};\nvar defaultDelayOptions = {\n    perChar: 40,\n    perHangul: 80,\n    perSpace: 0,\n    perLine: 0,\n    perDot: 320,\n    toggle: false\n};\nfunction createTypeStream(delayOptions) {\n    var currentAnimationId = 0;\n    var textContent = '';\n    var timeout = null;\n    var currentText = '';\n    var charIndex = 0;\n    var jasoIndex = 0;\n    var typeLength = 1;\n    var done = false;\n    var fireCount = 0;\n    function restoreValues() {\n        currentAnimationId = fireCount;\n        textContent = '';\n        timeout = null;\n        currentText = '';\n        charIndex = 0;\n        jasoIndex = 0;\n        typeLength = 1;\n        done = false;\n    }\n    var typeStream = function typeHangulStream(text, callback, currentDelay) {\n        return new Promise(function (resolve) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n            var currentDelayOptions = {\n                perChar: (_b = (_a = currentDelay === null || currentDelay === void 0 ? void 0 : currentDelay.perChar) !== null && _a !== void 0 ? _a : delayOptions === null || delayOptions === void 0 ? void 0 : delayOptions.perChar) !== null && _b !== void 0 ? _b : defaultDelayOptions.perChar,\n                perHangul: (_d = (_c = currentDelay === null || currentDelay === void 0 ? void 0 : currentDelay.perHangul) !== null && _c !== void 0 ? _c : delayOptions === null || delayOptions === void 0 ? void 0 : delayOptions.perHangul) !== null && _d !== void 0 ? _d : defaultDelayOptions.perHangul,\n                perSpace: (_f = (_e = currentDelay === null || currentDelay === void 0 ? void 0 : currentDelay.perSpace) !== null && _e !== void 0 ? _e : delayOptions === null || delayOptions === void 0 ? void 0 : delayOptions.perSpace) !== null && _f !== void 0 ? _f : defaultDelayOptions.perSpace,\n                perLine: (_h = (_g = currentDelay === null || currentDelay === void 0 ? void 0 : currentDelay.perLine) !== null && _g !== void 0 ? _g : delayOptions === null || delayOptions === void 0 ? void 0 : delayOptions.perLine) !== null && _h !== void 0 ? _h : defaultDelayOptions.perLine,\n                perDot: (_k = (_j = currentDelay === null || currentDelay === void 0 ? void 0 : currentDelay.perDot) !== null && _j !== void 0 ? _j : delayOptions === null || delayOptions === void 0 ? void 0 : delayOptions.perDot) !== null && _k !== void 0 ? _k : defaultDelayOptions.perDot,\n                toggle: (_m = (_l = currentDelay === null || currentDelay === void 0 ? void 0 : currentDelay.toggle) !== null && _l !== void 0 ? _l : delayOptions === null || delayOptions === void 0 ? void 0 : delayOptions.toggle) !== null && _m !== void 0 ? _m : defaultDelayOptions.toggle\n            };\n            var thisAnimationId = ++currentAnimationId;\n            fireCount = thisAnimationId;\n            var decomposedText = decomposeHangul(text);\n            function typeCharacter() {\n                if (charIndex < decomposedText.length) {\n                    var word = decomposedText[charIndex];\n                    var prevWord = charIndex > 0 ? decomposedText[charIndex - 1] : [];\n                    var currentCharJasos = word.slice(0, jasoIndex + 1);\n                    var currentJaso = currentCharJasos[currentCharJasos.length - 1];\n                    var jasoLength = currentJaso.length;\n                    currentJaso = jasoLength === 1 || typeLength !== 1 ? currentJaso : currentJaso[0];\n                    currentCharJasos = jasoLength === 1 || typeLength !== 1 ? currentCharJasos : changeLast(currentCharJasos, currentJaso);\n                    var afterHangulCombination = word.length > 1 && jasoIndex === word.length - 1;\n                    if (thisAnimationId !== currentAnimationId) {\n                        currentAnimationId = 0;\n                        callback(textContent, {\n                            decomposedText: decomposedText,\n                            charIndex: charIndex,\n                            jasoIndex: jasoIndex,\n                            lastJaso: currentJaso,\n                            isEnd: false,\n                            status: 'stopped'\n                        });\n                        if (currentDelayOptions.toggle) {\n                            if (timeout)\n                                clearTimeout(timeout);\n                            return;\n                        }\n                        else {\n                            restoreValues();\n                            return;\n                        }\n                    }\n                    var newLine = false;\n                    var endDot = false;\n                    var isSpaceChar = false;\n                    if (isSpaceCharacter(currentJaso))\n                        isSpaceChar = true;\n                    if (isNewLine(currentJaso))\n                        newLine = true;\n                    if (isDot(currentJaso))\n                        endDot = true;\n                    var combinedChar = composeHangul([currentCharJasos]);\n                    if (charIndex > 0 && prevWord.length === 2 && currentCharJasos.length === 1 && isInJongSung(currentJaso)) {\n                        var tempLastChar = prevWord.concat(currentJaso);\n                        var combinedLastChar = composeHangul([tempLastChar]);\n                        textContent = currentText.slice(0, -1) + combinedLastChar;\n                    }\n                    else {\n                        textContent = currentText + combinedChar;\n                    }\n                    if (jasoLength === 1 || typeLength !== 1) {\n                        jasoIndex++;\n                        typeLength = 1;\n                    }\n                    else {\n                        typeLength++;\n                    }\n                    if (jasoIndex >= word.length) {\n                        currentText += combinedChar;\n                        charIndex++;\n                        jasoIndex = 0;\n                        typeLength = 1;\n                    }\n                    callback(textContent, {\n                        decomposedText: decomposedText,\n                        charIndex: charIndex,\n                        jasoIndex: jasoIndex,\n                        lastJaso: currentJaso,\n                        isEnd: false,\n                        status: 'playing'\n                    });\n                    timeout = setTimeout(typeCharacter, newLine ? currentDelayOptions.perLine : endDot ? currentDelayOptions.perDot : isSpaceChar ? currentDelayOptions.perSpace : afterHangulCombination ? currentDelayOptions.perHangul : currentDelayOptions.perChar);\n                }\n                else if (timeout) {\n                    done = true;\n                    currentAnimationId = 0;\n                    clearTimeout(timeout);\n                    callback(textContent, {\n                        decomposedText: decomposedText,\n                        charIndex: charIndex,\n                        jasoIndex: jasoIndex,\n                        lastJaso: decomposedText[decomposedText.length - 1][decomposedText[decomposedText.length - 1].length - 1],\n                        isEnd: true,\n                        status: 'done'\n                    });\n                    resolve({\n                        textContent: textContent,\n                        decomposedText: decomposedText,\n                        charIndex: charIndex,\n                        jasoIndex: jasoIndex,\n                        lastJaso: decomposedText[decomposedText.length - 1][decomposedText[decomposedText.length - 1].length - 1],\n                        isEnd: true,\n                        status: 'done'\n                    });\n                }\n            }\n            if (done)\n                restoreValues();\n            typeCharacter();\n        });\n    };\n    return typeStream;\n}\nexport default createTypeStream;\n"],
  "mappings": "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",
  "names": []
}
