"""
RAG 시스템의 프롬프트 및 메타데이터 정의
"""

from langchain.chains.query_constructor.schema import AttributeInfo
from langchain.prompts import PromptTemplate
from tools.retrieve.financialReport.utils import get_company_names_from_files
from langchain.output_parsers.boolean import BooleanOutputParser
from langchain.retrievers.document_compressors.chain_extract import NoOutputParser
from langchain.output_parsers import ResponseSchema, StructuredOutputParser

# 문서 컨텐츠 설명 - 검색 대상이 되는 텍스트 내용 명확화
FINANCIAL_DOCUMENT_DESCRIPTION = """
이 데이터베이스는 한국 기업들의 사업보고서를 포함하고 있습니다. 재무제표, 손익계산서, 현금흐름표 등 기업의 재무 정보와 경영 성과를 확인할 수 있습니다.
"""

# 메타데이터 필드 정보 - 필터링 가능한 속성만 정의
METADATA_FIELD_INFO = [
    AttributeInfo(
        name="companyName",
        description=f"""기업명 검색 조건:
        - 정확한 기업명 검색: eq("companyName", "삼성전자")
        - 복수 기업 검색: or(eq("companyName", "삼성전자"), eq("companyName", "SK하이닉스"))
        - : eq("companyName", "<기업명> ESR켄달스퀘어리츠 </기업명>")
        한국 기업 이름의 예시 : 깨끗한나라, 삼부토건, 메리츠금융지주, 신원, 카카오, 카카오페이, 명문제약, 금양...
        ##주의: 기업명이 명시되지 않은 경우 NO_FILTER 사용
        ##주의: 기업명에는 절대 띄어쓰기를 사용하지 않습니다. 예) "메리츠 금융 지주" (X) -> "메리츠금융지주" (O)""",
        type="string"
    ),
    AttributeInfo(
        name="year",
        description="""회계연도 검색 조건:
        - 단일 연도: eq("year", 2023)
        - 특정 연도 이후: gte("year", 2020)
        - 특정 연도 이전: lte("year", 2022)
        - 기간 검색: and(gte("year", 2020), lte("year", 2023))
        * 유효 기간: 2018-2023년
        NOTE: 연도가 명시되지 않은 경우 최근 연도 기준""",
        type="integer"
    ),
]

# 검색 예제 - 실제 사용 사례 기반으로 수정
SEARCH_EXAMPLES = [
    (
        "삼성전자의 2022년 영업이익이 얼마인지 알려줘",
        {
            "query": "손익계산서 영업이익 매출원가 판매관리비",
            "filter": 'and(eq("companyName", "삼성전자"), eq("year", 2022))'
        }
    ),
    (
        "깨끗한나라의 현금흐름에 대해 알려줘",
        {
            "query": "현금흐름표 영업활동현금흐름 투자활동현금흐름 재무활동현금흐름",
            "filter": 'eq("companyName", "깨끗한나라")'
        }
    ),
    (
        "한화생명보험과 삼성생명의 2023년 지급여력비율을 비교해줘",
        {
            "query": "지급여력비율 지급여력금액 지급여력기준금액",
            "filter": 'and(or(eq("companyName", "한화생명보험"), eq("companyName", "삼성생명")), eq("year", 2023))'
        }
    ),
    (
        "2021년 이후 SK이노베이션의 배당금 지급 현황은?",
        {
            "query": "이익잉여금처분계산서 현금배당금 주당배당금 배당성향",
            "filter": 'and(eq("companyName", "SK이노베이션"), gte("year", 2021))'
        }
    ),
    (
        "현대차와 기아의 최근 3년간 연구개발비 추이를 보여줘",
        {
            "query": "연구개발비 경상연구개발비 연구개발투자",
            "filter": 'and(or(eq("companyName", "현대자동차"), eq("companyName", "기아")), gte("year", 2021))'
        }
    ),
    (
        "LG화학의 2023년 특허권과 기술권 현황은?",
        {
            "query": "무형자산 특허권 산업재산권 기술권 개발비",
            "filter": 'and(eq("companyName", "LG화학"), eq("year", 2023))'
        }
    )
]

REWRITE_PROMPT = PromptTemplate(
    template="""주어진 질문에 대해 사업보고서 검색에 최적화된 검색어를 제시해주세요.

검색어 작성 원칙:
1. 핵심 정보 분류별 주요 문구 포함
- 재무정보: "연결재무제표에 대한 주석", "손익계산서 주요 항목의 내용", "현금흐름 변동에 관한 사항" 등
- 사업정보: "주요 제품 및 서비스에 관한 사항", "시장점유율 추이 및 경쟁상황", "생산설비 현황 및 가동률" 등  
- 지배구조: "주주구성 및 변동현황", "이사회 구성과 활동내역", "임원 보수 현황" 등
- 위험요소: "시장위험과 위험관리", "자금조달과 유동성 위험", "신용위험 관리방안" 등

2. 검색어 구성 방식
- 기업명이 있는 경우: '[기업명]의 [검색 항목]에 관한 사항'
- 기업명이 없는 경우: '[검색 항목]에 관한 사항'
- 지주회사/계열회사 관계 명시 필요시 포함
- 상장 구분이 필요한 경우 시장 정보 포함

3. 검색 범위 설정
- 구체적인 기간 명시 (예: 2023 회계연도, 최근 3개 사업연도)
- 세부 항목별 구분 (예: 매출 구성 → 국내/해외 매출 현황)
- 검색어 끝에 '**' 표시

4. 재무비율 관련 검색 규칙
- 비율 계산식이 포함된 경우 구성 요소를 개별 검색어로 분리
- 재무제표 계정과목의 정확한 명칭 사용
  * 당기순이익 → "당기순이익", "당기순손실"
  * 자기자본 → "자본총계", "자본금", "자본잉여금"
  * 영업이익률 → "영업이익", "매출액"
  * 부채비율 → "부채총계", "자본총계"
- 계산에 필요한 모든 항목을 포함하여 검색
- 시계열 분석이 필요한 경우 기간 명시

예시:
질문: "주요 사업이 뭐야?"
답변: "주요 사업내용과 영업의 개황에 관한 사항 및 사업부문별 현황**"

질문: "현대차 해외공장 생산능력?"
답변: "현대자동차의 해외 생산기지별 설비 현황과 가동률 및 생산능력에 대한 상세 내용**"

질문: "최대주주 지분율이 어떻게 돼?"
답변: "최대주주 및 특수관계인의 주식 소유현황과 최근 지분율 변동에 관한 사항**"

질문: "신규투자 계획은?"
답변: "신규 투자계획 및 투자위험 요소와 자금조달 방안에 대한 세부내용**"

질문: "자기자본이익률((당기순이익 / 자기자본) × 100) 알려줘"
답변: "연결재무상태표상 자본총계와 연결손익계산서상 당기순이익 및 수익성 지표**"

질문: "순이자마진((이자수익 - 이자비용) / (대출채권 + 유가증권))은?"
답변: "연결손익계산서상 이자수익과 이자비용, 연결재무상태표상 대출채권과 유가증권 잔액 및 수익성 지표의 변동추이**"

질문: {query}
답변:""",
    input_variables=["query"]
)


EXTRACT_PROMPT = PromptTemplate(
    template="""다음 문서와 테이블 정보에서 사용자의 질문과 관련된 정보를 찾아 형식에 맞게 추출하세요.

                핵심 규칙:
                1. 문서의 내용이 질문과 관련이 있는지 판단하세요
                2. 관련이 있다면 다음 두 가지를 명확히 작성하세요:
                   - 정보가 필요했던 부분: 사용자 질문의 어떤 부분에 대한 정보인지
                   - 참고한 내용: 문서에서 찾은 실제 정보 (연도/기수 정보 포함)
                3. 관련이 없다면 빈 객체를 반환하세요
                4. 연도나 기수 정보가 있는 경우:
                   - 해당 연도/기수의 정보를 우선적으로 추출
                   - 이전 연도와의 비교 정보가 있다면 함께 포함
                   - 시점이 다른 정보는 명확히 구분하여 표시
                5. 연도나 기수 정보가 없는 경우:
                   - 사용자 쿼리에 없다면 최근 연도 기준으로 추출하세요
                   - 사용자 쿼리에 연도가 있지만 찾은 데이터에 없다면 연도 정보가 불확실함을 명확히 표시하세요

                예시 응답:
                {{"needed_information": "2023년 매출액 구성",
                  "referenced_content": "2023년(제59기) 매출 구성: 국내 375,446(전년 350,123), 해외 139,408(전년 125,890), 출처: 2023년 사업보고서 p.45",
                }}
                또는
                {{"needed_information": "",
                  "referenced_content": "",
                }}

                ### 검색 결과
                사용자 질문: {query}

                문서 내용:
                {page_content}

                테이블 정보:
                {table_info}

                검색 결과:""",
    input_variables=["query", "page_content", "table_info"]
)

# 응답 스키마 정의
response_schemas = [
    ResponseSchema(name="output", description="사용자 질문에 대한 최종 답변"),
    ResponseSchema(name="key_information", description="참고한 문서들의 정보 (출처, 내용, 페이지 번호, 파일명, 링크 등)")
]

# 파서 생성
output_parser = StructuredOutputParser.from_response_schemas(response_schemas)

FINAL_SUMMARY_PROMPT = PromptTemplate(
    template="""주어진 검색 결과들을 바탕으로 사용자의 질문에 대한 명확한 답변을 작성해주세요.

            사용자 질문: {query}

            검색 결과:
            {search_results}

            답변은 다음 형식으로 작성해주세요:
            {{"output": "사용자 질문에 대한 상세한 답변 내용",
             "key_information": [
                {{"tool": "출처 도구명",
                  "referenced_content": "답변 작성에 실제로 사용된 검색 결과 내용만 포함",
                  "page_number": "참고한 검색 결과 페이지 번호",
                  "filename": "참고한 검색 결과 파일명",
                  "link": "원고한 검색 결과 링크"
                }},
                ...
             ]
            }}

            주의사항:
            1. 검색 결과에서 사용자 질문과 직접적으로 관련된 정보만 추출하여 답변하세요
            2. 검색 결과에서 찾은 정보만을 사용하여 답변을 작성하세요
            3. 검색 결과에서 정보를 찾지 못했다는 언급은 하지 말고, 찾은 정보만 정확하게 전달하세요
            4. 각 referenced_content는 반드시 output에서 언급된 내용과 직접적으로 연관되어야 합니다
            5. key_information에는 답변 작성에 실제로 사용된 정보만 포함하세요
            6. 중복된 내용이나 답변에 반영되지 않은 내용은 key_information에서 제외하세요
            7. 검색된 정보의 시점(연도, 분기 등)을 명확히 포함하여 답변하세요
            8. 찾고자 하는 값과 38기, 39기와 같은 기수 정보가 있다면 우선 각 기수별로 숫자를 정확히 매칭하여 모두 반환하세요
           """,
    input_variables=["query", "search_results"]
)

TABLE_AGENT_PREFIX = """
당신은 재무제표 데이터를 전문적으로 검색하는 금융 애널리스트입니다. 주어진 데이터를 기반으로 다음 관점에서 분석해주세요.

각 기업마다 계정과목 명칭이 다를 수 있으므로, 금융 전문가로써 적절한 계정명을 택하세요.
# 계정명 선택 예시:
# 1. 수익성 관련 질문
#    - 질문: "매출이익률이 어떻게 되나요?"
#    - 관련 계정: '매출액', '매출총이익', '영업이익(손실)', '매출원가'
#
# 2. 비용 분석 질문
#    - 질문: "임차료가 어떻게 되나요?"
#    - 관련 계정: '판매비와관리비', '매출원가', '영업이익(손실)'
#
# 3. 자산 현황 질문
#    - 질문: "현금성 자산은 얼마인가요?"
#    - 관련 계정: '현금및현금성자산', '유동자산', '기타유동금융자산'
#
# 4. 부채 구조 질문
#    - 질문: "차입금 현황이 어떻게 되나요?"
#    - 관련 계정: '차입금및사채', '장기차입금및사채', '유동부채', '비유동부채'
#
# 5. 손익 관련 질문
#    - 질문: "당기순이익 추이가 어떻게 되나요?"
#    - 관련 계정: '당기순이익(손실)', '영업이익(손실)', '법인세비용차감전순이익(손실)'

# 참고: 숫자 표기 방식
# - 괄호가 없는 숫자: 양수 (이익/자산/부채 등)
# - 괄호가 있는 숫자: 음수 (손실/자산감소/부채감소 등)
# 예시:
# - 영업이익: 100,000 -> +100,000원의 이익
# - 영업이익(손실): (100,000) -> -100,000원의 손실
# - 당기순이익(손실): (50,000) -> -50,000원의 손실

반드시 아래 단계를 따르세요:

# 1. 데이터프레임 구조 파악:
#    - df.columns를 사용하여 사용 가능한 모든 칼럼을 확인합니다.
#    - 이를 토대로 계정명, 연도, 금액 등 필요한 칼럼을 파악합니다.
# 2. 사용자 질문 분석:
#    - 사용자가 요청한 정보와 관련된 모든 계정과목을 파악합니다
#    - 예를 들어 '임차료' 관련 질문의 경우:
#      * 손익계산서: 임차료, 지급임차료
#      * 재무상태표: 사용권자산, 유동리스부채, 비유동리스부채
#      * 현금흐름표: 리스부채상환, 임차료지급
#    - 필요한 연도 또는 기수 파악 (예: 특정 연도 또는 OO기)
# 3. 계정명 확인: df['계정명'].unique()를 사용하여 데이터프레임에서 사용 가능한 모든 계정명을 확인합니다.
# 4. 계정명 선택: 
#    - 질문과 관련된 모든 계정과목을 검색합니다
#    - 직접적인 계정과목이 없다면 유사하거나 연관된 계정과목을 찾습니다
#    - 모든 관련 계정과목의 정보를 종합하여 답변을 준비합니다
# 5. 연도/기수 확인: 
#    - df['당기명'].unique()로 현재 기수 확인
#    - 가장 최근 당기명과 최근 연도를 토대로 추후 기수명을 이해합니다.
# 6. 연도 선택: 질문의 의도에 맞는 연도를 선택합니다.
# 7. 데이터 추출: 
#    - 선택한 모든 관련 계정과목에 대해 데이터를 추출합니다
#    - 각 계정과목별로 금액과 증감을 확인합니다
#    - 연관된 계정과목들 간의 관계를 분석합니다
# 8. 결과 반환: 
#    - 모든 관련 계정과목의 정보를 종합적으로 설명합니다
#    - 직접적인 정보가 없는 경우, 유사 계정과목을 통해 유추 가능한 정보를 제공합니다
#    - 정보의 한계가 있다면 그 이유도 함께 설명합니다
#   - 최종 숫자의 단위를 확인하고 단위를 표시해주세요 (KRW, USD)
#   - **정보가 불충분한거 같으면** 사업보고서에서 가져와보겠다고 해주세요

You are using a pandas data frame in Python. The name of the data frame is 'df'.
This is the result of 'print(df.head())):
"""

COMBINED_FINANCIAL_REPORT_PROMPT = """당신은 사업보고서와 재무제표 도구를 사용하여 금융 정보를 검색하는 전문가입니다.
사용 가능한 도구:
1. financial_report_search: 사업보고서에서 정보를 검색
2. financial_statement_search: 재무제표에서 정보를 검색

다음 규칙을 반드시 따르세요:
1. 먼저 financial_statement_search 도구를 사용하여 재무제표 정보를 검색하세요.
2. financial_statement_search 결과를 분석하여:
   - 정보가 충분하면 바로 답변을 제공하세요.
   - 정보가 부족하거나 추가 맥락이 필요하면 financial_report_search 도구를 사용하여 보충 정보를 검색하세요.
   - 사용자가 찾는 계정명과 유사하지만 다른 계정명이 나온다면(예: 배당금을 찾는데 배당금수입이 나오는 경우) 반드시 financial_report_search 도구를 호출하여 정확한 정보를 검색하세요.
3. 두 도구의 결과를 종합하여 최종 답변을 제공하세요.

답변 형식:
- 재무제표 정보만으로 충분할 경우: 바로 결과를 제시
- 추가 정보가 필요한 경우: "추가 정보가 필요합니다"라는 문구와 함께 financial_report_search 도구 호출
- 최종 답변: 모든 정보를 종합한 완성된 답변 제공

주의사항:
- 각 도구의 결과를 명확히 구분하여 제시하세요.
- 정보의 출처(재무제표/사업보고서)를 명시하세요.
- 사용자가 원하는 정확한 계정명이 없고 유사한 계정명만 있는 경우 반드시 사업보고서를 확인하세요.
"""